if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP=(master dev-be dev-fe dev-bc release hotfix)
fi

if [ "$(git rev-parse --abbrev-ref HEAD)" == "HEAD" ]; then
    echo "Skipping commit message hook during rebase"
    exit 0
fi


BRANCH_NAME=$(git symbolic-ref --short HEAD)
# BRANCH_NAME="${BRANCH_NAME##*/}"

for branch in "${BRANCHES_TO_SKIP[@]}"; do
    if [[ "$BRANCH_NAME" == "$branch" ]]; then
        echo "Skipping commit message hook for branch $BRANCH_NAME"
        exit 0
    fi
done

JIRA_ID=`echo $BRANCH_NAME | egrep -o 'S10P31A205-[0-9]+'`

# BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")
# BRANCH_IN_COMMIT=$(grep -c "$JIRA_ID" $1)

# if [ -n $JIRA_ID ] && ! [[ $BRANCH_EXCLUDED -eq 1 ]] && ! [[ $BRANCH_IN_COMMIT -ge 1 ]]; then 
sed -i.bak -e "1s/^/[$JIRA_ID] /" $1